{% set dataArr = {} %}
  {% set dataWidthArr = {} %}
  {% set loopindex = 0 %}
  {% set counter = 0 %}
  {% set breakpoint = block.breakpoint|default(false) %}
  {% set showBorder = 1 %}
  {% set prefix = 'table-' ~ loop.index %}

{% if breakpoint %}
<style>
  @import "/assets/css/tabelle-mobile.min.css" screen and (max-width: {{ block.breakpoint }}px);
</style>
{% endif %}
<div class="anchor" id="{{ 'anker' ~ blockid }}"></div>
<section class="wl-wrapper-outer modul-tabelle">
    <div class="wl-wrapper">
        <div class="content-grid-12">

            <div class="modul-tabelle-body">

                <div class="table" id="{{ prefix }}">
                    <div class='theader'>

                        {% for col in block.table.columns %}
                        {% set theaderLoopindex = loop.index-1 %}
                        {% set colHeadingOutput = col.heading|replace({'|': '<br />'}) %}
                        {% set setTheaderRowborder = (theaderLoopindex == 0)? ' ' : ' setRowborder' %}
                        {% set extraStyle = (theaderLoopindex == 0)? ' extraStyle' : '' %}
                        <div data-width={{ col.width }} class='table_header heading-font-declaration
                        '>
                        <div class='theader-colum-inner rowHeight {{ setTheaderRowborder }}{{ extraStyle }}'>
                            {{ colHeadingOutput|raw }}
                        </div>
                    </div>
                    {% set dataArr = dataArr|merge({ (counter) : colHeadingOutput|raw }) %}
                    {% set dataWidthArr = dataWidthArr|merge({ (counter) : 'data-width=' ~ col.width }) %}
                    {% set counter = counter + 1 %}
                    {% endfor %}

                </div>
                {% for row in block.table.rows %}
                    <div class='table_row'>
                        {% for cell in row %}
                            {% set loopindex = loop.index-1 %}
                            {% set cellDistanceClass = (loop.index < loop.length)? ' cell-distance' : '' %}
                            {% set firstTableCellClass = (loop.index == 1)? ' first-table-cell' : '' %}
                            {# {% set firstTableCellFontClass = (loop.index == 1)? ' first-table-font-style' : '' %} #}
                            {% set setRowborder = (loopindex == 0)? ' ' : ' setRowborder' %}
                            {% set extraStyle = (loopindex == 0)? ' extraStyle' : '' %}
                            {% set noBorderLeft = (loopindex == 2)? ' noBorderLeft' : '' %}
                            {% set cellOutput = cell|replace({'|': '<br />'}) %}
                            <div {{ attribute(dataWidthArr, loopindex) }} class='table_small'>
                                <div class='colum-inner rowHeight{{ setRowborder }}{{ extraStyle }}{{ noBorderLeft }}'>
                                    <div class='tableMobileStyle table_cell column-left{{ firstTableCellClass }}'>{{ attribute(dataArr, loopindex)|raw }}</div>
                                    <div class='table_cell column-right{{ cellDistanceClass }}{{ firstTableCellClass }}'>{{ cellOutput|raw }}</div>
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                {% endfor %}
            </div>

        </div>
    </div>
    </div>
</section>

<script>
    $(document).ready(function () {

        setTimeout(function () {
            {% if breakpoint %}

            tabellenSpaltenBreite('#{{ prefix }}',{{ showBorder }},{{ breakpoint }});
            {% endif %}

            $('#{{ prefix }} .theader-colum-inner, #{{ prefix }} .colum-inner').matchHeight();

            $('#{{ prefix }} .column-right').matchHeight();

        }, 100);

        /* *********************************************************************************************************************** */
        {% if breakpoint %}

        $(window).resize(function () {

            setTimeout(function () {

                tabellenSpaltenBreite('#{{ prefix }}',{{ showBorder }},{{ breakpoint }});

            }, 100);
        })
        {% endif %}

    })
</script>

