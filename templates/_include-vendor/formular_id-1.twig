{% macro errorList(errors) %}

    {% if errors %}
        <ul class="errors">
            {% for error in errors %}
                <li>{{ error }}</li>
            {% endfor %}
        </ul>
    {% endif %}
{% endmacro %}

{% from _self import errorList %}

{% set form = wheelform.form({
    id: formularId,
    redirect: formularAntwortUrl,
}) %}

<div id="form" class="wl-form-wrapper">

    {{ form.open() }}
    {#
    {{ wheelformErrors['honeypot'] is defined ? errorList(wheelformErrors['honeypot']) }}
    #}

    {{ form.honeypot() }}
    {% set errorArray = [] %}
    {% set formError = 0 %}
    {% set setHiddenClass = '' %}
    {% import "_include-core/macros.twig" as _self %}

    <div class="field-group-1">

        <div class="field-group">
            <div class="group-single">{{ _self.formField( formularId, 'anrede', block ) | trim | raw  }}</div>
        </div>

        <div class="field-group">
            <div class="group-single">{{ _self.formField( formularId, 'vorname', block ) | trim | raw  }}</div>
        </div>

        <div class="field-group">
            <div class="group-single">{{ _self.formField( formularId, 'nachname', block ) | trim | raw  }}</div>
        </div>

        <div class="field-group">
            <div class="group-single">{{ _self.formField( formularId, 'email', block ) | trim | raw  }}</div>
        </div>

        <div class="field-group">
            <div class="group-single">{{ _self.formField( formularId, 'abstammung', block ) | trim | raw  }}</div>
        </div>

        <div class="field-group">
            <div class="group-single">{{ _self.formField( formularId, 'File', block ) | trim | raw  }}</div>
        </div>

        <div class="field-group">
            <div class="group-single">{{ _self.formField( formularId, 'message', block ) | trim | raw  }}</div>
        </div>

        <div class="field-group">
            <div class="group-single">{{ _self.formField( formularId, 'dsgvo', block ) | trim | raw  }}</div>
        </div>

    </div>



    <input type="hidden" name="scrollto" value="1">


    {#
    <pre>{{ dump(errorArray) }}</pre>
    <div class="InputfieldSubmit"><button class="btn-form" id="submit">Send</button></div>
    #}
    <button style="display:none" type="submit" class="submit-button" id="submit">{{ block.submitButtonText }}</button>
    <span class="submit-button" id="checkSubmit">{{ block.submitButtonText }}</span>


    {% if formError == 1%}
        <div class="form-info">
            {{ block.infoText }}
        </div>
    {% endif %}
    <div id="lock-modal"></div>
    <div id="loading-circle"><img src="/assets/images/icons/loading-circle.svg" alt="loading-circle" /></div>

    </form>

    {% set scrollTo = '0' %}
    {% if craft.app.request.getBodyParam('scrollto') == '1' %}
        {% set scrollTo = '1' %}
    {% endif %}


    <script>

        $(document).ready(function() {

            $('#form').find('form').addClass('formular-Kontakt');

            formValidate('.formular-Kontakt', '#checkSubmit');

            $('#inputUploadFile').fileinput({
                multipleText: '{1} files',
                showMultipleNames: true,
            });

            $('.fileinput').append('<label class="uploadInfoText">' + 'Bitte PDF w√§hlen <em></em>' + '</label>')

            var scrollTo = {{ scrollTo }}, antispamContent = '<input style="display: block;" class="antispam" type="checkbox" value="prevent spam" name="antispam[]" id="" checked />';

            $('#form').find('.wf-bouncer-1').after(antispamContent);

            if(scrollTo == '1') {

                $('html, body').animate(
                    {
                        scrollTop: $('#form').offset().top -60,
                    },
                    500,
                    'linear'
                )
            }

            floatLabel(".form-control");
        });

        /**
         * Lables Interaktion
         * @param inputType
         */
        function floatLabel(inputType){
            $(inputType).each(function(){
                var $this = $(this);
                // on focus add cladd active to label
                $this.focus(function(){
                    $this.parent().find('.lableInputField').addClass("active");
                });
                //on blur check field and remove class if needed
                $this.blur(function(){
                    if($this.val() === '' || $this.val() === 'blank'){
                        $this.parent().find('.lableInputField').removeClass("active");
                    }
                });
            });

        }
    </script>


</div>



