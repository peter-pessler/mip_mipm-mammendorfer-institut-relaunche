{# *------------* Beschreibung GET Variabeln *------------ *#}
{# ************************************************* #}
{#
template        => Dieses Template wird über get-ajax-feedback.twig aufgerufen diese benötigt den Namen dieses templates
blockid         => wird das matrixElemente der "Content Page" in der Schleife ausgelesen ist dies die Block ID wo das Modul aufgerufen wird (benötigt in get-ajax-feedback.twig )
produktgruppe   => IDs Produktgruppe-Kategorie
land            => IDs Land-Kategorie
sectionname     => sectionname der "Content Page" Seite welches über das entprechende Modul, das Ajax Event ausgelöst
pageid          => ID der "Content Page" Seite welches über das entprechende Modul, das Ajax Event ausgelöst
getall          => Diesen Template ist zugewiesen, ob alle Ergebnisse angezeigt werden oder in Etappen nachgeladen wird. Mit "getall" kann dieses geändert werden.
artikelausgabe  => Gesamtzahl der Augegebenen Artikel (ohne "weitere Ergebnisse anzeigen" obwohl es weitere gibt)
#}

{% set catstatus = (catstatus != 1)? 0 : 1 %}

{# ************************************************* #}
{# *------------* START Konfiguration *------------ * #}
{# ************************************************* #}
{% set sectionName = 'haendler' %}
{# *-----------------------------------------* #}
{% set articleItemsProduktgruppe = '' %}
{# *-----------------------------------------* #}
{% set categoryProduktgruppeIdsAnzahl = 0 %}
{# *-----------------------------------------* #}
{% set selectedLandIdsArray = {}  %}
{# *-----------------------------------------* #}
{% set outputArray = {}  %}
{# *-----------------------------------------* #}
{% set selectedLandIdsCounter = 0 %}
{# *-----------------------------------------* #}
{% set outputCounter = 0 %}
{# *-----------------------------------------* #}
{% set categoryProduktgruppeBy = '' %}
{# *-----------------------------------------* #}
{% set categoryLandStr = ''  %}
{# *-----------------------------------------* #}
{% set counter = '1' %}
{# *-----------------------------------------* #}
{% set categoryLandArr = {} %}
{# *-----------------------------------------* #}


{# *----------------* Land *---------------- #}
{% set allCategoryLand = craft.categories().group('land') %}
{% for elemente in allCategoryLand.all() %}
    {% set categoryLandStr  = (counter == 1)? elemente.id : categoryLandStr  ~ ',' ~ elemente.id  %}
    {% set categoryLandArr = categoryLandArr|merge({ (loop.index)  :  elemente.id }) %}
    {% set counter = counter + 1 %}
{% endfor %}

{# *-------------* Produktgruppe *------------- #}

{% if produktgruppe != '' %}


    {% set categoryProduktgruppeIdsArray = produktgruppe|split(',') %}
    {% set categoryProduktgruppeIdsAnzahl = categoryProduktgruppeIdsArray|length %}

    {% set categoryProduktgruppeSelectById = craft.categories().id(categoryProduktgruppeIdsArray).all() %}
    {% set categoryProduktgruppeBy = { element: categoryProduktgruppeSelectById  }  %}

    {% set articleItemsProduktgruppe = craft.entries().section(sectionName) %}

{% else %}

    {% set articleItemsProduktgruppe = craft.entries()
        .section(sectionName) %}

{% endif %}

{# *-----------------------------------------* #}

{% for item in articleItemsProduktgruppe %}

    {% for catLandResult in item.auswahlKategorieLand.all() %}

        {% for value in categoryLandArr %}
            {% if catLandResult.id == value %}
                {% set selectedLandIdsArray = selectedLandIdsArray|merge({ (selectedLandIdsCounter) : catLandResult.id }) %}
                {% set selectedLandIdsCounter = selectedLandIdsCounter + 1 %}
            {% endif %}
        {% endfor %}
    {% endfor %}

{% endfor %}

{# ===== AUSGABE ========== (Bei der Ausgabe werden doppelte Elemente im Array entfernt) ============================================== #}

{% for output in selectedLandIdsArray|reduce((unique, item) => item in unique ? unique : unique|merge([item]), []) %}
    {% set outputArray = outputArray|merge({ (outputCounter) : output }) %}
    {% set outputCounter = outputCounter + 1 %}
{% endfor %}

{{ outputArray|json_encode }}









